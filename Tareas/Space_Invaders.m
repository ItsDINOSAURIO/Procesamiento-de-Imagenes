%Delgado Hernández Emiliano
%Rodríguez Hernández Araceli Noemi

clear, clc, close all

% Generar alien
al=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 1 0 0 0 0 0 1 0 0 0; ...
    0 0 0 0 1 0 0 0 1 0 0 0 0; ...
    0 0 0 1 1 1 1 1 1 1 0 0 0; ...
    0 0 1 1 0 1 1 1 0 1 1 0 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 0 1 1 1 1 1 1 1 0 1 0; ...
    0 1 0 1 0 0 0 0 0 1 0 1 0; ...
    0 0 0 0 1 1 0 1 1 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0];
%Espacio en negro
n=zeros(size(al));

% Generar jugador  
pl=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 1 1 1 0 0 0 0 0; ...
    0 0 0 0 0 1 1 1 0 0 0 0 0; ...
    0 0 1 1 1 1 1 1 1 1 1 0 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Bala
Bt=[0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Vidas
plh=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 1 0 0 0 0 0 0; ...
    0 0 0 0 0 1 1 1 0 0 0 0 0; ...
    0 0 0 0 0 1 1 1 0 0 0 0 0; ...
    0 0 1 1 1 1 1 1 1 1 1 0 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 1 1 1 1 1 1 1 1 1 1 1 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Texto1
sco=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 1 1 1 0 0 0 0 0 0 0 0 0; ...
    0 1 0 0 0 0 0 0 0 0 0 0 0; ...
    0 1 1 1 0 1 1 0 1 1 1 0 1; ...
    0 0 0 1 0 1 0 0 1 0 1 0 1; ...
    0 0 0 1 0 1 0 0 1 0 1 0 1; ...
    0 1 1 1 0 1 1 0 1 1 1 0 1; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Texto2
re=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 1 1 0 0 0; ...
    0 0 0 1 1 1 0 0 1 1 0 0 0; ...
    1 1 0 1 1 1 0 0 0 0 0 0 0; ...
    0 0 0 1 0 0 0 0 1 1 0 0 0; ...
    0 0 0 1 1 1 0 0 1 1 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Texto3
lv=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 1 1 0; ...
    0 1 0 0 1 0 1 1 1 0 1 1 0; ...
    0 1 1 1 1 0 1 0 1 0 0 0 0; ...
    0 1 1 1 1 0 1 1 1 0 1 1 0; ...
    0 1 0 0 1 0 1 0 0 0 1 1 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

%Texto4
pt=[0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 1 0 0 1 1 1 0 1 1 1 0; ...
    0 1 1 0 0 1 0 1 0 1 0 1 0; ...
    0 0 1 0 0 1 0 1 0 1 0 1 0; ...
    0 1 1 1 0 1 1 1 0 1 1 1 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0; ...
    0 0 0 0 0 0 0 0 0 0 0 0 0 ];

% Parámetros de animación
oa = 1; % Amplitud del movimiento oscilante
of = 0.3; % Frecuencia del movimiento oscilante
dp= 10; % Periodo de desplazamiento hacia abajo
ww = size(pl, 2); % Ancho de la ventana deslizante

% Inicializar posición y dirección del movimiento
wsc = 0; %Columna de inicio
dir = 1; % Dirección inicial hacia la derecha



% Animación
for f = 1:200

    % Reinicializar plano para cada iteración
    fo = zeros(120, 156);
    %Posición de objetos estáticos
    fo(1:10,1:13)=sco;
    fo(1:10,14:26)=re; 
    fo(1:10,27:39)=pt;
    fo(1:10,105:117)=lv;
    fo(1:10,118:130)=plh;

    % Movimiento oscilante de izquierda a derecha para objetos "al"
    for i = 1:10
        for j = 4:7
            % Calcular coordenadas de la región actual en fo
            rsj = (j - 1) * 10 + 3;
            rsi = (i - 1) * 13 + 14;
            rej = rsj + 10 - 1;
            rei = rsi + 13 - 1;

            % Aplicar movimiento oscilante a la región actual
            fo(rsj:rej, rsi:rei) = ...
                circshift(al, [0, round(oa * sin(of * f))]);
        end
    end
    % Desplazamiento hacia abajo periódico para objetos "al"
    if rem(f, dp) == 0
        fo(34:120, 14:156) = circshift(fo(34:120, 14:156), [1, 0]);
    end

    % Calcular la posición de la ventana deslizante para "pl"
    wec = wsc + ww - 1; %Columna de inicio y de fin de la ventana

    % Verificar si la ventana deslizante alcanza los bordes de la pantalla
    if wsc <= 1 || wec >= size(fo, 2)
        % Cambiar el sentido del movimiento
        dir = -dir;

        % Ajustar la posición de la ventana deslizante si se alcanzan los bordes
        if wsc <= 1
            wsc = 2;
        elseif wec >= size(fo, 2)
            wsc = size(fo, 2) - ww + 1;
        end
    end

    % Actualizar la posición de la ventana deslizante
    wsc = wsc + dir;

    % Movimiento horizontal para objeto "pl" dentro de la ventana deslizante
    if wsc <= size(fo, 2)
        fo(109:118, wsc:(wsc + ww - 1)) = pl(:, 1:ww);

    end
    %Disparo
        % if wsc==78 &&(wsc + ww - 1)==90
        %     for bp1=72:1:109
        %         bp2=bp1+9;
        %     fo(bp1:bp2,78:90)=Bt;
        %     end
        %     fo(1:10,118:130)=0;
        % end

    % Dibuja la nueva configuración
    clf;
    imagesc(fo); %Imagen en equivalente rgb
    % imshow(fo); %Imagen en grises
    axis off;
    drawnow;
    pause(0.05); % Controla la velocidad de la animación
end
% GO=imread("GO.png");
% imagesc(GO);
% axis off;
